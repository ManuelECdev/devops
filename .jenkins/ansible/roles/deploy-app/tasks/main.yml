---
- name: "get old pod"
  shell: |
    kubectl get pods --all-namespaces | grep udafinalproject | awk '{print $2}'
  register: oldPod

- debug:
    var: oldPod
    verbosity: 0

- name: "deploy app"
  shell: |
    echo "deploy new container build"
    kubectl run udafinalproject-{{ build_tag }}  --image=manuelecdev/udafinalproject-{{ build_tag }} --port=5000 --labels app=udafinalproject-{{ build_tag }}

- name: "deploy loadbalancer service"
  shell: |
     echo "first app deployment"
     kubectl expose po udafinalproject-{{ build_tag }}  --target-port=5000 -l app=udafinalproject --name=udafinalproject-lb  --type=LoadBalancer
  when: oldPod.stdout == ""

- name: "update lb service selector to the new app"
  shell: |
     kubectl patch service udafinalproject-lb -p '{"spec":{"selector":{"app": "udafinalproject-{{ build_tag }}"}}}'
  when: oldPod.stdout != ""

- name: " delete old deployment"
  shell: |
     kubectl delete pod {{ oldPod.stdout }}
  when: oldPod.stdout != ""
