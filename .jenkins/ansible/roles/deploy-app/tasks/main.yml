---
- name: "get old pod if any"
  shell: |
    kubectl get pods --all-namespaces | grep udafinalproject | awk '{print $2}'
  register: oldPod
  ignore_errors: true

- debug:
    var: oldPod
    verbosity: 0

- name: "deploy app"
  shell: |
    echo "deploy new container build"
    kubectl run udafinalproject-{{ build_tag }}  --image=manuelecdev/udafinalproject-{{ build_tag }} --port=5000 --labels app=udafinalproject-{{ build_tag }}
  ignore_errors: true

- name: " make blue/green deployment and clean old environment"
  shell: |
    if [[ "{{ oldPod }}" != "" ]]
    then 
     echo “updating the lb service to the new app deployment”
     kubectl patch service udafinalproject-lb -p '{"spec":{"selector":{"app": "udafinalproject-{{ build_tag }}"}}}'
     echo "deleting old environment"
     kubectl delete pod {{ oldPod }}
    else
     echo "first app deployment"
     kubectl expose po udafinalproject-{{ build_tag }}  --target-port=5000 -l app=udafinalproject --name=udafinalproject-lb  --type=LoadBalancer 
    fi
  ignore_errors: true
